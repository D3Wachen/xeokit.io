{
  "type": "File",
  "start": 0,
  "end": 6995,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 148,
      "column": 24
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 6995,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 148,
        "column": 24
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 63,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 63
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 8,
            "end": 20,
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 20
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 8,
              "end": 20,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 8
                },
                "end": {
                  "line": 1,
                  "column": 20
                },
                "identifierName": "ModelsPlugin"
              },
              "name": "ModelsPlugin"
            },
            "local": {
              "type": "Identifier",
              "start": 8,
              "end": 20,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 8
                },
                "end": {
                  "line": 1,
                  "column": 20
                },
                "identifierName": "ModelsPlugin"
              },
              "name": "ModelsPlugin"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 27,
          "end": 62,
          "loc": {
            "start": {
              "line": 1,
              "column": 27
            },
            "end": {
              "line": 1,
              "column": 62
            }
          },
          "extra": {
            "rawValue": "./../../../viewer/ModelsPlugin.js",
            "raw": "\"./../../../viewer/ModelsPlugin.js\""
          },
          "value": "./../../../viewer/ModelsPlugin.js"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 64,
        "end": 127,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 63
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 72,
            "end": 80,
            "loc": {
              "start": {
                "line": 2,
                "column": 8
              },
              "end": {
                "line": 2,
                "column": 16
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 72,
              "end": 80,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 8
                },
                "end": {
                  "line": 2,
                  "column": 16
                },
                "identifierName": "STLModel"
              },
              "name": "STLModel"
            },
            "local": {
              "type": "Identifier",
              "start": 72,
              "end": 80,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 8
                },
                "end": {
                  "line": 2,
                  "column": 16
                },
                "identifierName": "STLModel"
              },
              "name": "STLModel"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 87,
          "end": 126,
          "loc": {
            "start": {
              "line": 2,
              "column": 23
            },
            "end": {
              "line": 2,
              "column": 62
            }
          },
          "extra": {
            "rawValue": "./../../../xeogl/STLModel/STLModel.js",
            "raw": "\"./../../../xeogl/STLModel/STLModel.js\""
          },
          "value": "./../../../xeogl/STLModel/STLModel.js"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * A viewer plugin that loads models from <a href=\"https://en.wikipedia.org/wiki/STL_(file_format)\">STL</a> files.\n *\n * For each model loaded, creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within its\n * {@link Viewer}'s [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n *\n * Supports both binary and ASCII formats.\n *\n * ## Smoothing STL Normals\n *\n * STL models are normally flat-shaded, however providing a ````smoothNormals```` parameter when loading gives a smooth\n * appearance. Triangles in STL are disjoint, where each triangle has its own separate vertex positions, normals and\n * (optionally) colors. This means that you can have gaps between triangles in an STL model. Normals for each triangle\n * are perpendicular to the triangle's surface, which gives the model a faceted appearance by default.\n *\n * The ```smoothNormals``` parameter causes the plugin to recalculate the STL normals, so that each normal's direction is\n * the average of the orientations of the triangles adjacent to its vertex. When smoothing, each vertex normal is set to\n * the average of the orientations of all other triangles that have a vertex at the same position, excluding those triangles\n * whose direction deviates from the direction of the vertice's triangle by a threshold given in\n * the ````smoothNormalsAngleThreshold```` loading parameter. This makes smoothing robust for hard edges.\n *\n * ## Creating Separate Meshes\n *\n * An STL model is normally one single mesh, however providing a ````splitMeshes```` parameter when loading\n * will create a separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) within the\n * [xeogl.Model](http://xeogl.org/docs/classes/Model.html) for each group of faces that share the same vertex colors.\n * This option only works with binary STL files.\n *\n * See the {@link STLModelsPlugin#load} method for parameters that you can configure\n * each [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with as you load it.\n *\n * @example\n * // Create a xeokit Viewer\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * // Add an STLModelsPlugin to the Viewer\n * var plugin = new GLTFModelsPlugin(viewer, {\n *      id: \"STLModels\"  // Default value\n * });\n *\n * // We can also get the plugin by its ID on the Viewer\n * plugin = viewer.plugins.STLModels;\n *\n * // Load the glTF model\n * // These params can include all the xeogl.STLModel configs\n * const model = plugin.load({\n *      id: \"myModel\",\n *      src: \"models/mySTLModel.stl\",\n *      scale: [0.1, 0.1, 0.1],\n *      rotate: [90, 0, 0],\n *      translate: [100,0,0],\n *      edges: true,\n *      smoothNormals: true,                // Default\n *      smoothNormalsAngleThreshold: 20,    // Default\n *      splitMeshes: true                   // Default\n * });\n *\n * // Recall that the model is a xeogl.Model\n *\n * // When the model has loaded, fit it to view\n * model.on(\"loaded\", function() {\n *      viewer.cameraFlight.flyTo(model);\n * });\n *\n * // Update properties of the model via the xeogl.Model\n * model.translate = [200,0,0];\n *\n * // You can unload the model via the plugin\n * plugin.unload(\"myModel\");\n *\n * // Or unload it by calling destroy() on the xeogl.Model itself\n * model.destroy();\n *\n * @class STLModelsPlugin\n ",
            "start": 129,
            "end": 3411,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 80,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "Identifier",
        "start": 3412,
        "end": 6969,
        "loc": {
          "start": {
            "line": 81,
            "column": 0
          },
          "end": {
            "line": 146,
            "column": 1
          }
        },
        "id": {
          "type": "Identifier",
          "start": 3418,
          "end": 3433,
          "loc": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 21
            },
            "identifierName": "STLModelsPlugin"
          },
          "name": "STLModelsPlugin",
          "leadingComments": null
        },
        "superClass": {
          "type": "Identifier",
          "start": 3442,
          "end": 3454,
          "loc": {
            "start": {
              "line": 81,
              "column": 30
            },
            "end": {
              "line": 81,
              "column": 42
            },
            "identifierName": "ModelsPlugin"
          },
          "name": "ModelsPlugin"
        },
        "body": {
          "type": "ClassBody",
          "start": 3455,
          "end": 6969,
          "loc": {
            "start": {
              "line": 81,
              "column": 43
            },
            "end": {
              "line": 146,
              "column": 1
            }
          },
          "body": [
            {
              "type": "ClassMethod",
              "start": 3717,
              "end": 3800,
              "loc": {
                "start": {
                  "line": 89,
                  "column": 4
                },
                "end": {
                  "line": 91,
                  "column": 5
                }
              },
              "static": false,
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 3717,
                "end": 3728,
                "loc": {
                  "start": {
                    "line": 89,
                    "column": 4
                  },
                  "end": {
                    "line": 89,
                    "column": 15
                  },
                  "identifierName": "constructor"
                },
                "name": "constructor",
                "leadingComments": null
              },
              "kind": "constructor",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 3729,
                  "end": 3735,
                  "loc": {
                    "start": {
                      "line": 89,
                      "column": 16
                    },
                    "end": {
                      "line": 89,
                      "column": 22
                    },
                    "identifierName": "viewer"
                  },
                  "name": "viewer"
                },
                {
                  "type": "Identifier",
                  "start": 3737,
                  "end": 3740,
                  "loc": {
                    "start": {
                      "line": 89,
                      "column": 24
                    },
                    "end": {
                      "line": 89,
                      "column": 27
                    },
                    "identifierName": "cfg"
                  },
                  "name": "cfg"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 3742,
                "end": 3800,
                "loc": {
                  "start": {
                    "line": 89,
                    "column": 29
                  },
                  "end": {
                    "line": 91,
                    "column": 5
                  }
                },
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "start": 3752,
                    "end": 3794,
                    "loc": {
                      "start": {
                        "line": 90,
                        "column": 8
                      },
                      "end": {
                        "line": 90,
                        "column": 50
                      }
                    },
                    "expression": {
                      "type": "CallExpression",
                      "start": 3752,
                      "end": 3793,
                      "loc": {
                        "start": {
                          "line": 90,
                          "column": 8
                        },
                        "end": {
                          "line": 90,
                          "column": 49
                        }
                      },
                      "callee": {
                        "type": "Super",
                        "start": 3752,
                        "end": 3757,
                        "loc": {
                          "start": {
                            "line": 90,
                            "column": 8
                          },
                          "end": {
                            "line": 90,
                            "column": 13
                          }
                        }
                      },
                      "arguments": [
                        {
                          "type": "StringLiteral",
                          "start": 3758,
                          "end": 3769,
                          "loc": {
                            "start": {
                              "line": 90,
                              "column": 14
                            },
                            "end": {
                              "line": 90,
                              "column": 25
                            }
                          },
                          "extra": {
                            "rawValue": "STLModels",
                            "raw": "\"STLModels\""
                          },
                          "value": "STLModels"
                        },
                        {
                          "type": "Identifier",
                          "start": 3771,
                          "end": 3777,
                          "loc": {
                            "start": {
                              "line": 90,
                              "column": 27
                            },
                            "end": {
                              "line": 90,
                              "column": 33
                            },
                            "identifierName": "viewer"
                          },
                          "name": "viewer"
                        },
                        {
                          "type": "Identifier",
                          "start": 3779,
                          "end": 3787,
                          "loc": {
                            "start": {
                              "line": 90,
                              "column": 35
                            },
                            "end": {
                              "line": 90,
                              "column": 43
                            },
                            "identifierName": "STLModel"
                          },
                          "name": "STLModel"
                        },
                        {
                          "type": "Identifier",
                          "start": 3789,
                          "end": 3792,
                          "loc": {
                            "start": {
                              "line": 90,
                              "column": 45
                            },
                            "end": {
                              "line": 90,
                              "column": 48
                            },
                            "identifierName": "cfg"
                          },
                          "name": "cfg"
                        }
                      ]
                    }
                  }
                ],
                "directives": [],
                "trailingComments": null
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * @constructor\n     * @param {Viewer} viewer The Viewer.\n     * @param {Object} cfg  Plugin configuration.\n     * @param {String} [cfg.id=\"STLModels\"] Optional ID for this plugin, so that we can find it within {@link Viewer#plugins}.\n     ",
                  "start": 3462,
                  "end": 3712,
                  "loc": {
                    "start": {
                      "line": 83,
                      "column": 4
                    },
                    "end": {
                      "line": 88,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * Loads an STL model from a file into this STLModelsPlugin's {@link Viewer}.\n     *\n     * Creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {*} params  Loading parameters.\n     *\n     * @param {String} params.id ID to assign to the [xeogl.Model](http://xeogl.org/docs/classes/Model.html),\n     * unique among all components in the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {String} params.src Path to an STL file.\n     *\n     * @param {String} [params.metadataSrc] Path to an optional metadata file (see: [Model Metadata](https://github.com/xeolabs/xeokit.io/wiki/Model-Metadata)).\n     *\n     * @param {xeogl.Object} [params.parent] The parent [xeogl.Object](http://xeogl.org/docs/classes/Object.html),\n     * if we want to graft the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) into a xeogl object hierarchy.\n     *\n     * @param {Boolean} [params.edges=false] Whether or not xeogl renders the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with edges emphasized.\n     *\n     * @param {Float32Array} [params.position=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local 3D position.\n     *\n     * @param {Float32Array} [params.scale=[1,1,1]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local scale.\n     *\n     * @param {Float32Array} [params.rotation=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local\n     * rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * @param {Float32Array} [params.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] The\n     * [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local modelling transform matrix. Overrides\n     * the position, scale and rotation parameters.\n     *\n     * @param {Boolean} [params.backfaces=false] When true, allows visible backfaces, wherever specified in the STL.\n     * When false, ignores backfaces.\n     *\n     * @param {Boolean} [params.smoothNormals=true] When true, automatically converts face-oriented normals to vertex\n     * normals for a smooth appearance.\n     *\n     * @param {Number} [params.smoothNormalsAngleThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Number} [params.edgeThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Boolean} [params.splitMeshes=true] When true, creates a\n     * separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) for each group of faces that share the same vertex\n     * colors. Only works with binary STL.\n     *\n     * @returns {{xeogl.Model}} A [xeogl.Model](http://xeogl.org/docs/classes/Model.html) representing the loaded STL model.\n     ",
                  "start": 3806,
                  "end": 6907,
                  "loc": {
                    "start": {
                      "line": 93,
                      "column": 4
                    },
                    "end": {
                      "line": 142,
                      "column": 7
                    }
                  }
                }
              ]
            },
            {
              "type": "ClassMethod",
              "start": 6912,
              "end": 6967,
              "loc": {
                "start": {
                  "line": 143,
                  "column": 4
                },
                "end": {
                  "line": 145,
                  "column": 5
                }
              },
              "static": false,
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 6912,
                "end": 6916,
                "loc": {
                  "start": {
                    "line": 143,
                    "column": 4
                  },
                  "end": {
                    "line": 143,
                    "column": 8
                  },
                  "identifierName": "load"
                },
                "name": "load",
                "leadingComments": null
              },
              "kind": "method",
              "id": null,
              "generator": false,
              "expression": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 6917,
                  "end": 6923,
                  "loc": {
                    "start": {
                      "line": 143,
                      "column": 9
                    },
                    "end": {
                      "line": 143,
                      "column": 15
                    },
                    "identifierName": "params"
                  },
                  "name": "params"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 6925,
                "end": 6967,
                "loc": {
                  "start": {
                    "line": 143,
                    "column": 17
                  },
                  "end": {
                    "line": 145,
                    "column": 5
                  }
                },
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 6935,
                    "end": 6961,
                    "loc": {
                      "start": {
                        "line": 144,
                        "column": 8
                      },
                      "end": {
                        "line": 144,
                        "column": 34
                      }
                    },
                    "argument": {
                      "type": "CallExpression",
                      "start": 6942,
                      "end": 6960,
                      "loc": {
                        "start": {
                          "line": 144,
                          "column": 15
                        },
                        "end": {
                          "line": 144,
                          "column": 33
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 6942,
                        "end": 6952,
                        "loc": {
                          "start": {
                            "line": 144,
                            "column": 15
                          },
                          "end": {
                            "line": 144,
                            "column": 25
                          }
                        },
                        "object": {
                          "type": "Super",
                          "start": 6942,
                          "end": 6947,
                          "loc": {
                            "start": {
                              "line": 144,
                              "column": 15
                            },
                            "end": {
                              "line": 144,
                              "column": 20
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 6948,
                          "end": 6952,
                          "loc": {
                            "start": {
                              "line": 144,
                              "column": 21
                            },
                            "end": {
                              "line": 144,
                              "column": 25
                            },
                            "identifierName": "load"
                          },
                          "name": "load"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 6953,
                          "end": 6959,
                          "loc": {
                            "start": {
                              "line": 144,
                              "column": 26
                            },
                            "end": {
                              "line": 144,
                              "column": 32
                            },
                            "identifierName": "params"
                          },
                          "name": "params"
                        }
                      ]
                    }
                  }
                ],
                "directives": []
              },
              "leadingComments": [
                {
                  "type": "CommentBlock",
                  "value": "*\n     * Loads an STL model from a file into this STLModelsPlugin's {@link Viewer}.\n     *\n     * Creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {*} params  Loading parameters.\n     *\n     * @param {String} params.id ID to assign to the [xeogl.Model](http://xeogl.org/docs/classes/Model.html),\n     * unique among all components in the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {String} params.src Path to an STL file.\n     *\n     * @param {String} [params.metadataSrc] Path to an optional metadata file (see: [Model Metadata](https://github.com/xeolabs/xeokit.io/wiki/Model-Metadata)).\n     *\n     * @param {xeogl.Object} [params.parent] The parent [xeogl.Object](http://xeogl.org/docs/classes/Object.html),\n     * if we want to graft the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) into a xeogl object hierarchy.\n     *\n     * @param {Boolean} [params.edges=false] Whether or not xeogl renders the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with edges emphasized.\n     *\n     * @param {Float32Array} [params.position=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local 3D position.\n     *\n     * @param {Float32Array} [params.scale=[1,1,1]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local scale.\n     *\n     * @param {Float32Array} [params.rotation=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local\n     * rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * @param {Float32Array} [params.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] The\n     * [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local modelling transform matrix. Overrides\n     * the position, scale and rotation parameters.\n     *\n     * @param {Boolean} [params.backfaces=false] When true, allows visible backfaces, wherever specified in the STL.\n     * When false, ignores backfaces.\n     *\n     * @param {Boolean} [params.smoothNormals=true] When true, automatically converts face-oriented normals to vertex\n     * normals for a smooth appearance.\n     *\n     * @param {Number} [params.smoothNormalsAngleThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Number} [params.edgeThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Boolean} [params.splitMeshes=true] When true, creates a\n     * separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) for each group of faces that share the same vertex\n     * colors. Only works with binary STL.\n     *\n     * @returns {{xeogl.Model}} A [xeogl.Model](http://xeogl.org/docs/classes/Model.html) representing the loaded STL model.\n     ",
                  "start": 3806,
                  "end": 6907,
                  "loc": {
                    "start": {
                      "line": 93,
                      "column": 4
                    },
                    "end": {
                      "line": 142,
                      "column": 7
                    }
                  }
                }
              ]
            }
          ]
        },
        "leadingComments": [],
        "name": "_",
        "trailingComments": []
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6971,
        "end": 6995,
        "loc": {
          "start": {
            "line": 148,
            "column": 0
          },
          "end": {
            "line": 148,
            "column": 24
          }
        },
        "declaration": null,
        "specifiers": [
          {
            "type": "ExportSpecifier",
            "start": 6979,
            "end": 6994,
            "loc": {
              "start": {
                "line": 148,
                "column": 8
              },
              "end": {
                "line": 148,
                "column": 23
              }
            },
            "local": {
              "type": "Identifier",
              "start": 6979,
              "end": 6994,
              "loc": {
                "start": {
                  "line": 148,
                  "column": 8
                },
                "end": {
                  "line": 148,
                  "column": 23
                },
                "identifierName": "STLModelsPlugin"
              },
              "name": "STLModelsPlugin"
            },
            "exported": {
              "type": "Identifier",
              "start": 6979,
              "end": 6994,
              "loc": {
                "start": {
                  "line": 148,
                  "column": 8
                },
                "end": {
                  "line": 148,
                  "column": 23
                },
                "identifierName": "STLModelsPlugin"
              },
              "name": "STLModelsPlugin"
            }
          }
        ],
        "source": null
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6971,
        "end": 6995,
        "loc": {
          "start": {
            "line": 148,
            "column": 0
          },
          "end": {
            "line": 148,
            "column": 24
          }
        },
        "declaration": {
          "type": "ClassDeclaration",
          "start": 3412,
          "end": 6969,
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 146,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 3418,
            "end": 3433,
            "loc": {
              "start": {
                "line": 81,
                "column": 6
              },
              "end": {
                "line": 81,
                "column": 21
              },
              "identifierName": "STLModelsPlugin"
            },
            "name": "STLModelsPlugin",
            "leadingComments": null
          },
          "superClass": {
            "type": "Identifier",
            "start": 3442,
            "end": 3454,
            "loc": {
              "start": {
                "line": 81,
                "column": 30
              },
              "end": {
                "line": 81,
                "column": 42
              },
              "identifierName": "ModelsPlugin"
            },
            "name": "ModelsPlugin"
          },
          "body": {
            "type": "ClassBody",
            "start": 3455,
            "end": 6969,
            "loc": {
              "start": {
                "line": 81,
                "column": 43
              },
              "end": {
                "line": 146,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 3717,
                "end": 3800,
                "loc": {
                  "start": {
                    "line": 89,
                    "column": 4
                  },
                  "end": {
                    "line": 91,
                    "column": 5
                  }
                },
                "static": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 3717,
                  "end": 3728,
                  "loc": {
                    "start": {
                      "line": 89,
                      "column": 4
                    },
                    "end": {
                      "line": 89,
                      "column": 15
                    },
                    "identifierName": "constructor"
                  },
                  "name": "constructor",
                  "leadingComments": null
                },
                "kind": "constructor",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 3729,
                    "end": 3735,
                    "loc": {
                      "start": {
                        "line": 89,
                        "column": 16
                      },
                      "end": {
                        "line": 89,
                        "column": 22
                      },
                      "identifierName": "viewer"
                    },
                    "name": "viewer"
                  },
                  {
                    "type": "Identifier",
                    "start": 3737,
                    "end": 3740,
                    "loc": {
                      "start": {
                        "line": 89,
                        "column": 24
                      },
                      "end": {
                        "line": 89,
                        "column": 27
                      },
                      "identifierName": "cfg"
                    },
                    "name": "cfg"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 3742,
                  "end": 3800,
                  "loc": {
                    "start": {
                      "line": 89,
                      "column": 29
                    },
                    "end": {
                      "line": 91,
                      "column": 5
                    }
                  },
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "start": 3752,
                      "end": 3794,
                      "loc": {
                        "start": {
                          "line": 90,
                          "column": 8
                        },
                        "end": {
                          "line": 90,
                          "column": 50
                        }
                      },
                      "expression": {
                        "type": "CallExpression",
                        "start": 3752,
                        "end": 3793,
                        "loc": {
                          "start": {
                            "line": 90,
                            "column": 8
                          },
                          "end": {
                            "line": 90,
                            "column": 49
                          }
                        },
                        "callee": {
                          "type": "Super",
                          "start": 3752,
                          "end": 3757,
                          "loc": {
                            "start": {
                              "line": 90,
                              "column": 8
                            },
                            "end": {
                              "line": 90,
                              "column": 13
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "StringLiteral",
                            "start": 3758,
                            "end": 3769,
                            "loc": {
                              "start": {
                                "line": 90,
                                "column": 14
                              },
                              "end": {
                                "line": 90,
                                "column": 25
                              }
                            },
                            "extra": {
                              "rawValue": "STLModels",
                              "raw": "\"STLModels\""
                            },
                            "value": "STLModels"
                          },
                          {
                            "type": "Identifier",
                            "start": 3771,
                            "end": 3777,
                            "loc": {
                              "start": {
                                "line": 90,
                                "column": 27
                              },
                              "end": {
                                "line": 90,
                                "column": 33
                              },
                              "identifierName": "viewer"
                            },
                            "name": "viewer"
                          },
                          {
                            "type": "Identifier",
                            "start": 3779,
                            "end": 3787,
                            "loc": {
                              "start": {
                                "line": 90,
                                "column": 35
                              },
                              "end": {
                                "line": 90,
                                "column": 43
                              },
                              "identifierName": "STLModel"
                            },
                            "name": "STLModel"
                          },
                          {
                            "type": "Identifier",
                            "start": 3789,
                            "end": 3792,
                            "loc": {
                              "start": {
                                "line": 90,
                                "column": 45
                              },
                              "end": {
                                "line": 90,
                                "column": 48
                              },
                              "identifierName": "cfg"
                            },
                            "name": "cfg"
                          }
                        ]
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n     * @constructor\n     * @param {Viewer} viewer The Viewer.\n     * @param {Object} cfg  Plugin configuration.\n     * @param {String} [cfg.id=\"STLModels\"] Optional ID for this plugin, so that we can find it within {@link Viewer#plugins}.\n     ",
                    "start": 3462,
                    "end": 3712,
                    "loc": {
                      "start": {
                        "line": 83,
                        "column": 4
                      },
                      "end": {
                        "line": 88,
                        "column": 7
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n     * Loads an STL model from a file into this STLModelsPlugin's {@link Viewer}.\n     *\n     * Creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {*} params  Loading parameters.\n     *\n     * @param {String} params.id ID to assign to the [xeogl.Model](http://xeogl.org/docs/classes/Model.html),\n     * unique among all components in the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {String} params.src Path to an STL file.\n     *\n     * @param {String} [params.metadataSrc] Path to an optional metadata file (see: [Model Metadata](https://github.com/xeolabs/xeokit.io/wiki/Model-Metadata)).\n     *\n     * @param {xeogl.Object} [params.parent] The parent [xeogl.Object](http://xeogl.org/docs/classes/Object.html),\n     * if we want to graft the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) into a xeogl object hierarchy.\n     *\n     * @param {Boolean} [params.edges=false] Whether or not xeogl renders the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with edges emphasized.\n     *\n     * @param {Float32Array} [params.position=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local 3D position.\n     *\n     * @param {Float32Array} [params.scale=[1,1,1]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local scale.\n     *\n     * @param {Float32Array} [params.rotation=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local\n     * rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * @param {Float32Array} [params.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] The\n     * [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local modelling transform matrix. Overrides\n     * the position, scale and rotation parameters.\n     *\n     * @param {Boolean} [params.backfaces=false] When true, allows visible backfaces, wherever specified in the STL.\n     * When false, ignores backfaces.\n     *\n     * @param {Boolean} [params.smoothNormals=true] When true, automatically converts face-oriented normals to vertex\n     * normals for a smooth appearance.\n     *\n     * @param {Number} [params.smoothNormalsAngleThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Number} [params.edgeThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Boolean} [params.splitMeshes=true] When true, creates a\n     * separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) for each group of faces that share the same vertex\n     * colors. Only works with binary STL.\n     *\n     * @returns {{xeogl.Model}} A [xeogl.Model](http://xeogl.org/docs/classes/Model.html) representing the loaded STL model.\n     ",
                    "start": 3806,
                    "end": 6907,
                    "loc": {
                      "start": {
                        "line": 93,
                        "column": 4
                      },
                      "end": {
                        "line": 142,
                        "column": 7
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 6912,
                "end": 6967,
                "loc": {
                  "start": {
                    "line": 143,
                    "column": 4
                  },
                  "end": {
                    "line": 145,
                    "column": 5
                  }
                },
                "static": false,
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 6912,
                  "end": 6916,
                  "loc": {
                    "start": {
                      "line": 143,
                      "column": 4
                    },
                    "end": {
                      "line": 143,
                      "column": 8
                    },
                    "identifierName": "load"
                  },
                  "name": "load",
                  "leadingComments": null
                },
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 6917,
                    "end": 6923,
                    "loc": {
                      "start": {
                        "line": 143,
                        "column": 9
                      },
                      "end": {
                        "line": 143,
                        "column": 15
                      },
                      "identifierName": "params"
                    },
                    "name": "params"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 6925,
                  "end": 6967,
                  "loc": {
                    "start": {
                      "line": 143,
                      "column": 17
                    },
                    "end": {
                      "line": 145,
                      "column": 5
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 6935,
                      "end": 6961,
                      "loc": {
                        "start": {
                          "line": 144,
                          "column": 8
                        },
                        "end": {
                          "line": 144,
                          "column": 34
                        }
                      },
                      "argument": {
                        "type": "CallExpression",
                        "start": 6942,
                        "end": 6960,
                        "loc": {
                          "start": {
                            "line": 144,
                            "column": 15
                          },
                          "end": {
                            "line": 144,
                            "column": 33
                          }
                        },
                        "callee": {
                          "type": "MemberExpression",
                          "start": 6942,
                          "end": 6952,
                          "loc": {
                            "start": {
                              "line": 144,
                              "column": 15
                            },
                            "end": {
                              "line": 144,
                              "column": 25
                            }
                          },
                          "object": {
                            "type": "Super",
                            "start": 6942,
                            "end": 6947,
                            "loc": {
                              "start": {
                                "line": 144,
                                "column": 15
                              },
                              "end": {
                                "line": 144,
                                "column": 20
                              }
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "start": 6948,
                            "end": 6952,
                            "loc": {
                              "start": {
                                "line": 144,
                                "column": 21
                              },
                              "end": {
                                "line": 144,
                                "column": 25
                              },
                              "identifierName": "load"
                            },
                            "name": "load"
                          },
                          "computed": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 6953,
                            "end": 6959,
                            "loc": {
                              "start": {
                                "line": 144,
                                "column": 26
                              },
                              "end": {
                                "line": 144,
                                "column": 32
                              },
                              "identifierName": "params"
                            },
                            "name": "params"
                          }
                        ]
                      }
                    }
                  ],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n     * Loads an STL model from a file into this STLModelsPlugin's {@link Viewer}.\n     *\n     * Creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {*} params  Loading parameters.\n     *\n     * @param {String} params.id ID to assign to the [xeogl.Model](http://xeogl.org/docs/classes/Model.html),\n     * unique among all components in the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {String} params.src Path to an STL file.\n     *\n     * @param {String} [params.metadataSrc] Path to an optional metadata file (see: [Model Metadata](https://github.com/xeolabs/xeokit.io/wiki/Model-Metadata)).\n     *\n     * @param {xeogl.Object} [params.parent] The parent [xeogl.Object](http://xeogl.org/docs/classes/Object.html),\n     * if we want to graft the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) into a xeogl object hierarchy.\n     *\n     * @param {Boolean} [params.edges=false] Whether or not xeogl renders the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with edges emphasized.\n     *\n     * @param {Float32Array} [params.position=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local 3D position.\n     *\n     * @param {Float32Array} [params.scale=[1,1,1]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local scale.\n     *\n     * @param {Float32Array} [params.rotation=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local\n     * rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * @param {Float32Array} [params.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] The\n     * [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local modelling transform matrix. Overrides\n     * the position, scale and rotation parameters.\n     *\n     * @param {Boolean} [params.backfaces=false] When true, allows visible backfaces, wherever specified in the STL.\n     * When false, ignores backfaces.\n     *\n     * @param {Boolean} [params.smoothNormals=true] When true, automatically converts face-oriented normals to vertex\n     * normals for a smooth appearance.\n     *\n     * @param {Number} [params.smoothNormalsAngleThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Number} [params.edgeThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Boolean} [params.splitMeshes=true] When true, creates a\n     * separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) for each group of faces that share the same vertex\n     * colors. Only works with binary STL.\n     *\n     * @returns {{xeogl.Model}} A [xeogl.Model](http://xeogl.org/docs/classes/Model.html) representing the loaded STL model.\n     ",
                    "start": 3806,
                    "end": 6907,
                    "loc": {
                      "start": {
                        "line": 93,
                        "column": 4
                      },
                      "end": {
                        "line": 142,
                        "column": 7
                      }
                    }
                  }
                ]
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * A viewer plugin that loads models from <a href=\"https://en.wikipedia.org/wiki/STL_(file_format)\">STL</a> files.\n *\n * For each model loaded, creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within its\n * {@link Viewer}'s [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n *\n * Supports both binary and ASCII formats.\n *\n * ## Smoothing STL Normals\n *\n * STL models are normally flat-shaded, however providing a ````smoothNormals```` parameter when loading gives a smooth\n * appearance. Triangles in STL are disjoint, where each triangle has its own separate vertex positions, normals and\n * (optionally) colors. This means that you can have gaps between triangles in an STL model. Normals for each triangle\n * are perpendicular to the triangle's surface, which gives the model a faceted appearance by default.\n *\n * The ```smoothNormals``` parameter causes the plugin to recalculate the STL normals, so that each normal's direction is\n * the average of the orientations of the triangles adjacent to its vertex. When smoothing, each vertex normal is set to\n * the average of the orientations of all other triangles that have a vertex at the same position, excluding those triangles\n * whose direction deviates from the direction of the vertice's triangle by a threshold given in\n * the ````smoothNormalsAngleThreshold```` loading parameter. This makes smoothing robust for hard edges.\n *\n * ## Creating Separate Meshes\n *\n * An STL model is normally one single mesh, however providing a ````splitMeshes```` parameter when loading\n * will create a separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) within the\n * [xeogl.Model](http://xeogl.org/docs/classes/Model.html) for each group of faces that share the same vertex colors.\n * This option only works with binary STL files.\n *\n * See the {@link STLModelsPlugin#load} method for parameters that you can configure\n * each [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with as you load it.\n *\n * @example\n * // Create a xeokit Viewer\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * // Add an STLModelsPlugin to the Viewer\n * var plugin = new GLTFModelsPlugin(viewer, {\n *      id: \"STLModels\"  // Default value\n * });\n *\n * // We can also get the plugin by its ID on the Viewer\n * plugin = viewer.plugins.STLModels;\n *\n * // Load the glTF model\n * // These params can include all the xeogl.STLModel configs\n * const model = plugin.load({\n *      id: \"myModel\",\n *      src: \"models/mySTLModel.stl\",\n *      scale: [0.1, 0.1, 0.1],\n *      rotate: [90, 0, 0],\n *      translate: [100,0,0],\n *      edges: true,\n *      smoothNormals: true,                // Default\n *      smoothNormalsAngleThreshold: 20,    // Default\n *      splitMeshes: true                   // Default\n * });\n *\n * // Recall that the model is a xeogl.Model\n *\n * // When the model has loaded, fit it to view\n * model.on(\"loaded\", function() {\n *      viewer.cameraFlight.flyTo(model);\n * });\n *\n * // Update properties of the model via the xeogl.Model\n * model.translate = [200,0,0];\n *\n * // You can unload the model via the plugin\n * plugin.unload(\"myModel\");\n *\n * // Or unload it by calling destroy() on the xeogl.Model itself\n * model.destroy();\n *\n * @class STLModelsPlugin\n ",
              "start": 129,
              "end": 3411,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 0
                },
                "end": {
                  "line": 80,
                  "column": 3
                }
              }
            }
          ],
          "__PseudoExport__": false,
          "trailingComments": []
        },
        "specifiers": null,
        "source": null,
        "leadingComments": null
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * A viewer plugin that loads models from <a href=\"https://en.wikipedia.org/wiki/STL_(file_format)\">STL</a> files.\n *\n * For each model loaded, creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within its\n * {@link Viewer}'s [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n *\n * Supports both binary and ASCII formats.\n *\n * ## Smoothing STL Normals\n *\n * STL models are normally flat-shaded, however providing a ````smoothNormals```` parameter when loading gives a smooth\n * appearance. Triangles in STL are disjoint, where each triangle has its own separate vertex positions, normals and\n * (optionally) colors. This means that you can have gaps between triangles in an STL model. Normals for each triangle\n * are perpendicular to the triangle's surface, which gives the model a faceted appearance by default.\n *\n * The ```smoothNormals``` parameter causes the plugin to recalculate the STL normals, so that each normal's direction is\n * the average of the orientations of the triangles adjacent to its vertex. When smoothing, each vertex normal is set to\n * the average of the orientations of all other triangles that have a vertex at the same position, excluding those triangles\n * whose direction deviates from the direction of the vertice's triangle by a threshold given in\n * the ````smoothNormalsAngleThreshold```` loading parameter. This makes smoothing robust for hard edges.\n *\n * ## Creating Separate Meshes\n *\n * An STL model is normally one single mesh, however providing a ````splitMeshes```` parameter when loading\n * will create a separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) within the\n * [xeogl.Model](http://xeogl.org/docs/classes/Model.html) for each group of faces that share the same vertex colors.\n * This option only works with binary STL files.\n *\n * See the {@link STLModelsPlugin#load} method for parameters that you can configure\n * each [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with as you load it.\n *\n * @example\n * // Create a xeokit Viewer\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * // Add an STLModelsPlugin to the Viewer\n * var plugin = new GLTFModelsPlugin(viewer, {\n *      id: \"STLModels\"  // Default value\n * });\n *\n * // We can also get the plugin by its ID on the Viewer\n * plugin = viewer.plugins.STLModels;\n *\n * // Load the glTF model\n * // These params can include all the xeogl.STLModel configs\n * const model = plugin.load({\n *      id: \"myModel\",\n *      src: \"models/mySTLModel.stl\",\n *      scale: [0.1, 0.1, 0.1],\n *      rotate: [90, 0, 0],\n *      translate: [100,0,0],\n *      edges: true,\n *      smoothNormals: true,                // Default\n *      smoothNormalsAngleThreshold: 20,    // Default\n *      splitMeshes: true                   // Default\n * });\n *\n * // Recall that the model is a xeogl.Model\n *\n * // When the model has loaded, fit it to view\n * model.on(\"loaded\", function() {\n *      viewer.cameraFlight.flyTo(model);\n * });\n *\n * // Update properties of the model via the xeogl.Model\n * model.translate = [200,0,0];\n *\n * // You can unload the model via the plugin\n * plugin.unload(\"myModel\");\n *\n * // Or unload it by calling destroy() on the xeogl.Model itself\n * model.destroy();\n *\n * @class STLModelsPlugin\n ",
      "start": 129,
      "end": 3411,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 80,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * @constructor\n     * @param {Viewer} viewer The Viewer.\n     * @param {Object} cfg  Plugin configuration.\n     * @param {String} [cfg.id=\"STLModels\"] Optional ID for this plugin, so that we can find it within {@link Viewer#plugins}.\n     ",
      "start": 3462,
      "end": 3712,
      "loc": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 88,
          "column": 7
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * Loads an STL model from a file into this STLModelsPlugin's {@link Viewer}.\n     *\n     * Creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {*} params  Loading parameters.\n     *\n     * @param {String} params.id ID to assign to the [xeogl.Model](http://xeogl.org/docs/classes/Model.html),\n     * unique among all components in the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {String} params.src Path to an STL file.\n     *\n     * @param {String} [params.metadataSrc] Path to an optional metadata file (see: [Model Metadata](https://github.com/xeolabs/xeokit.io/wiki/Model-Metadata)).\n     *\n     * @param {xeogl.Object} [params.parent] The parent [xeogl.Object](http://xeogl.org/docs/classes/Object.html),\n     * if we want to graft the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) into a xeogl object hierarchy.\n     *\n     * @param {Boolean} [params.edges=false] Whether or not xeogl renders the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with edges emphasized.\n     *\n     * @param {Float32Array} [params.position=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local 3D position.\n     *\n     * @param {Float32Array} [params.scale=[1,1,1]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local scale.\n     *\n     * @param {Float32Array} [params.rotation=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local\n     * rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * @param {Float32Array} [params.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] The\n     * [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local modelling transform matrix. Overrides\n     * the position, scale and rotation parameters.\n     *\n     * @param {Boolean} [params.backfaces=false] When true, allows visible backfaces, wherever specified in the STL.\n     * When false, ignores backfaces.\n     *\n     * @param {Boolean} [params.smoothNormals=true] When true, automatically converts face-oriented normals to vertex\n     * normals for a smooth appearance.\n     *\n     * @param {Number} [params.smoothNormalsAngleThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Number} [params.edgeThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Boolean} [params.splitMeshes=true] When true, creates a\n     * separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) for each group of faces that share the same vertex\n     * colors. Only works with binary STL.\n     *\n     * @returns {{xeogl.Model}} A [xeogl.Model](http://xeogl.org/docs/classes/Model.html) representing the loaded STL model.\n     ",
      "start": 3806,
      "end": 6907,
      "loc": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 142,
          "column": 7
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ModelsPlugin",
      "start": 8,
      "end": 20,
      "loc": {
        "start": {
          "line": 1,
          "column": 8
        },
        "end": {
          "line": 1,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 20,
      "end": 21,
      "loc": {
        "start": {
          "line": 1,
          "column": 20
        },
        "end": {
          "line": 1,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 22,
      "end": 26,
      "loc": {
        "start": {
          "line": 1,
          "column": 22
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./../../../viewer/ModelsPlugin.js",
      "start": 27,
      "end": 62,
      "loc": {
        "start": {
          "line": 1,
          "column": 27
        },
        "end": {
          "line": 1,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 62,
      "end": 63,
      "loc": {
        "start": {
          "line": 1,
          "column": 62
        },
        "end": {
          "line": 1,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 64,
      "end": 70,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 71,
      "end": 72,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STLModel",
      "start": 72,
      "end": 80,
      "loc": {
        "start": {
          "line": 2,
          "column": 8
        },
        "end": {
          "line": 2,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 80,
      "end": 81,
      "loc": {
        "start": {
          "line": 2,
          "column": 16
        },
        "end": {
          "line": 2,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 82,
      "end": 86,
      "loc": {
        "start": {
          "line": 2,
          "column": 18
        },
        "end": {
          "line": 2,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./../../../xeogl/STLModel/STLModel.js",
      "start": 87,
      "end": 126,
      "loc": {
        "start": {
          "line": 2,
          "column": 23
        },
        "end": {
          "line": 2,
          "column": 62
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 126,
      "end": 127,
      "loc": {
        "start": {
          "line": 2,
          "column": 62
        },
        "end": {
          "line": 2,
          "column": 63
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * A viewer plugin that loads models from <a href=\"https://en.wikipedia.org/wiki/STL_(file_format)\">STL</a> files.\n *\n * For each model loaded, creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within its\n * {@link Viewer}'s [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n *\n * Supports both binary and ASCII formats.\n *\n * ## Smoothing STL Normals\n *\n * STL models are normally flat-shaded, however providing a ````smoothNormals```` parameter when loading gives a smooth\n * appearance. Triangles in STL are disjoint, where each triangle has its own separate vertex positions, normals and\n * (optionally) colors. This means that you can have gaps between triangles in an STL model. Normals for each triangle\n * are perpendicular to the triangle's surface, which gives the model a faceted appearance by default.\n *\n * The ```smoothNormals``` parameter causes the plugin to recalculate the STL normals, so that each normal's direction is\n * the average of the orientations of the triangles adjacent to its vertex. When smoothing, each vertex normal is set to\n * the average of the orientations of all other triangles that have a vertex at the same position, excluding those triangles\n * whose direction deviates from the direction of the vertice's triangle by a threshold given in\n * the ````smoothNormalsAngleThreshold```` loading parameter. This makes smoothing robust for hard edges.\n *\n * ## Creating Separate Meshes\n *\n * An STL model is normally one single mesh, however providing a ````splitMeshes```` parameter when loading\n * will create a separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) within the\n * [xeogl.Model](http://xeogl.org/docs/classes/Model.html) for each group of faces that share the same vertex colors.\n * This option only works with binary STL files.\n *\n * See the {@link STLModelsPlugin#load} method for parameters that you can configure\n * each [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with as you load it.\n *\n * @example\n * // Create a xeokit Viewer\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * // Add an STLModelsPlugin to the Viewer\n * var plugin = new GLTFModelsPlugin(viewer, {\n *      id: \"STLModels\"  // Default value\n * });\n *\n * // We can also get the plugin by its ID on the Viewer\n * plugin = viewer.plugins.STLModels;\n *\n * // Load the glTF model\n * // These params can include all the xeogl.STLModel configs\n * const model = plugin.load({\n *      id: \"myModel\",\n *      src: \"models/mySTLModel.stl\",\n *      scale: [0.1, 0.1, 0.1],\n *      rotate: [90, 0, 0],\n *      translate: [100,0,0],\n *      edges: true,\n *      smoothNormals: true,                // Default\n *      smoothNormalsAngleThreshold: 20,    // Default\n *      splitMeshes: true                   // Default\n * });\n *\n * // Recall that the model is a xeogl.Model\n *\n * // When the model has loaded, fit it to view\n * model.on(\"loaded\", function() {\n *      viewer.cameraFlight.flyTo(model);\n * });\n *\n * // Update properties of the model via the xeogl.Model\n * model.translate = [200,0,0];\n *\n * // You can unload the model via the plugin\n * plugin.unload(\"myModel\");\n *\n * // Or unload it by calling destroy() on the xeogl.Model itself\n * model.destroy();\n *\n * @class STLModelsPlugin\n ",
      "start": 129,
      "end": 3411,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 80,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 3412,
      "end": 3417,
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STLModelsPlugin",
      "start": 3418,
      "end": 3433,
      "loc": {
        "start": {
          "line": 81,
          "column": 6
        },
        "end": {
          "line": 81,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "extends",
        "keyword": "extends",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "extends",
      "start": 3434,
      "end": 3441,
      "loc": {
        "start": {
          "line": 81,
          "column": 22
        },
        "end": {
          "line": 81,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ModelsPlugin",
      "start": 3442,
      "end": 3454,
      "loc": {
        "start": {
          "line": 81,
          "column": 30
        },
        "end": {
          "line": 81,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3455,
      "end": 3456,
      "loc": {
        "start": {
          "line": 81,
          "column": 43
        },
        "end": {
          "line": 81,
          "column": 44
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * @constructor\n     * @param {Viewer} viewer The Viewer.\n     * @param {Object} cfg  Plugin configuration.\n     * @param {String} [cfg.id=\"STLModels\"] Optional ID for this plugin, so that we can find it within {@link Viewer#plugins}.\n     ",
      "start": 3462,
      "end": 3712,
      "loc": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 88,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "constructor",
      "start": 3717,
      "end": 3728,
      "loc": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3728,
      "end": 3729,
      "loc": {
        "start": {
          "line": 89,
          "column": 15
        },
        "end": {
          "line": 89,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "viewer",
      "start": 3729,
      "end": 3735,
      "loc": {
        "start": {
          "line": 89,
          "column": 16
        },
        "end": {
          "line": 89,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3735,
      "end": 3736,
      "loc": {
        "start": {
          "line": 89,
          "column": 22
        },
        "end": {
          "line": 89,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "cfg",
      "start": 3737,
      "end": 3740,
      "loc": {
        "start": {
          "line": 89,
          "column": 24
        },
        "end": {
          "line": 89,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3740,
      "end": 3741,
      "loc": {
        "start": {
          "line": 89,
          "column": 27
        },
        "end": {
          "line": 89,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3742,
      "end": 3743,
      "loc": {
        "start": {
          "line": 89,
          "column": 29
        },
        "end": {
          "line": 89,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "super",
        "keyword": "super",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "super",
      "start": 3752,
      "end": 3757,
      "loc": {
        "start": {
          "line": 90,
          "column": 8
        },
        "end": {
          "line": 90,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3757,
      "end": 3758,
      "loc": {
        "start": {
          "line": 90,
          "column": 13
        },
        "end": {
          "line": 90,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "STLModels",
      "start": 3758,
      "end": 3769,
      "loc": {
        "start": {
          "line": 90,
          "column": 14
        },
        "end": {
          "line": 90,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3769,
      "end": 3770,
      "loc": {
        "start": {
          "line": 90,
          "column": 25
        },
        "end": {
          "line": 90,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "viewer",
      "start": 3771,
      "end": 3777,
      "loc": {
        "start": {
          "line": 90,
          "column": 27
        },
        "end": {
          "line": 90,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3777,
      "end": 3778,
      "loc": {
        "start": {
          "line": 90,
          "column": 33
        },
        "end": {
          "line": 90,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STLModel",
      "start": 3779,
      "end": 3787,
      "loc": {
        "start": {
          "line": 90,
          "column": 35
        },
        "end": {
          "line": 90,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3787,
      "end": 3788,
      "loc": {
        "start": {
          "line": 90,
          "column": 43
        },
        "end": {
          "line": 90,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "cfg",
      "start": 3789,
      "end": 3792,
      "loc": {
        "start": {
          "line": 90,
          "column": 45
        },
        "end": {
          "line": 90,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3792,
      "end": 3793,
      "loc": {
        "start": {
          "line": 90,
          "column": 48
        },
        "end": {
          "line": 90,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3793,
      "end": 3794,
      "loc": {
        "start": {
          "line": 90,
          "column": 49
        },
        "end": {
          "line": 90,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3799,
      "end": 3800,
      "loc": {
        "start": {
          "line": 91,
          "column": 4
        },
        "end": {
          "line": 91,
          "column": 5
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n     * Loads an STL model from a file into this STLModelsPlugin's {@link Viewer}.\n     *\n     * Creates a [xeogl.Model](http://xeogl.org/docs/classes/Model.html) within the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {*} params  Loading parameters.\n     *\n     * @param {String} params.id ID to assign to the [xeogl.Model](http://xeogl.org/docs/classes/Model.html),\n     * unique among all components in the Viewer's [xeogl.Scene](http://xeogl.org/docs/classes/Scene.html).\n     *\n     * @param {String} params.src Path to an STL file.\n     *\n     * @param {String} [params.metadataSrc] Path to an optional metadata file (see: [Model Metadata](https://github.com/xeolabs/xeokit.io/wiki/Model-Metadata)).\n     *\n     * @param {xeogl.Object} [params.parent] The parent [xeogl.Object](http://xeogl.org/docs/classes/Object.html),\n     * if we want to graft the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) into a xeogl object hierarchy.\n     *\n     * @param {Boolean} [params.edges=false] Whether or not xeogl renders the [xeogl.Model](http://xeogl.org/docs/classes/Model.html) with edges emphasized.\n     *\n     * @param {Float32Array} [params.position=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local 3D position.\n     *\n     * @param {Float32Array} [params.scale=[1,1,1]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s\n     * local scale.\n     *\n     * @param {Float32Array} [params.rotation=[0,0,0]] The [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local\n     * rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * @param {Float32Array} [params.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] The\n     * [xeogl.Model](http://xeogl.org/docs/classes/Model.html)'s local modelling transform matrix. Overrides\n     * the position, scale and rotation parameters.\n     *\n     * @param {Boolean} [params.backfaces=false] When true, allows visible backfaces, wherever specified in the STL.\n     * When false, ignores backfaces.\n     *\n     * @param {Boolean} [params.smoothNormals=true] When true, automatically converts face-oriented normals to vertex\n     * normals for a smooth appearance.\n     *\n     * @param {Number} [params.smoothNormalsAngleThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Number} [params.edgeThreshold=20] When ghosting, highlighting, selecting or edging, this is the threshold\n     * angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     *\n     * @param {Boolean} [params.splitMeshes=true] When true, creates a\n     * separate [xeogl.Mesh](http://xeogl.org/docs/classes/Mesh.html) for each group of faces that share the same vertex\n     * colors. Only works with binary STL.\n     *\n     * @returns {{xeogl.Model}} A [xeogl.Model](http://xeogl.org/docs/classes/Model.html) representing the loaded STL model.\n     ",
      "start": 3806,
      "end": 6907,
      "loc": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 142,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "load",
      "start": 6912,
      "end": 6916,
      "loc": {
        "start": {
          "line": 143,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6916,
      "end": 6917,
      "loc": {
        "start": {
          "line": 143,
          "column": 8
        },
        "end": {
          "line": 143,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "params",
      "start": 6917,
      "end": 6923,
      "loc": {
        "start": {
          "line": 143,
          "column": 9
        },
        "end": {
          "line": 143,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6923,
      "end": 6924,
      "loc": {
        "start": {
          "line": 143,
          "column": 15
        },
        "end": {
          "line": 143,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6925,
      "end": 6926,
      "loc": {
        "start": {
          "line": 143,
          "column": 17
        },
        "end": {
          "line": 143,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 6935,
      "end": 6941,
      "loc": {
        "start": {
          "line": 144,
          "column": 8
        },
        "end": {
          "line": 144,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "super",
        "keyword": "super",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "super",
      "start": 6942,
      "end": 6947,
      "loc": {
        "start": {
          "line": 144,
          "column": 15
        },
        "end": {
          "line": 144,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6947,
      "end": 6948,
      "loc": {
        "start": {
          "line": 144,
          "column": 20
        },
        "end": {
          "line": 144,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "load",
      "start": 6948,
      "end": 6952,
      "loc": {
        "start": {
          "line": 144,
          "column": 21
        },
        "end": {
          "line": 144,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6952,
      "end": 6953,
      "loc": {
        "start": {
          "line": 144,
          "column": 25
        },
        "end": {
          "line": 144,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "params",
      "start": 6953,
      "end": 6959,
      "loc": {
        "start": {
          "line": 144,
          "column": 26
        },
        "end": {
          "line": 144,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6959,
      "end": 6960,
      "loc": {
        "start": {
          "line": 144,
          "column": 32
        },
        "end": {
          "line": 144,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6960,
      "end": 6961,
      "loc": {
        "start": {
          "line": 144,
          "column": 33
        },
        "end": {
          "line": 144,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6966,
      "end": 6967,
      "loc": {
        "start": {
          "line": 145,
          "column": 4
        },
        "end": {
          "line": 145,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6968,
      "end": 6969,
      "loc": {
        "start": {
          "line": 146,
          "column": 0
        },
        "end": {
          "line": 146,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 6971,
      "end": 6977,
      "loc": {
        "start": {
          "line": 148,
          "column": 0
        },
        "end": {
          "line": 148,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6978,
      "end": 6979,
      "loc": {
        "start": {
          "line": 148,
          "column": 7
        },
        "end": {
          "line": 148,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STLModelsPlugin",
      "start": 6979,
      "end": 6994,
      "loc": {
        "start": {
          "line": 148,
          "column": 8
        },
        "end": {
          "line": 148,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6994,
      "end": 6995,
      "loc": {
        "start": {
          "line": 148,
          "column": 23
        },
        "end": {
          "line": 148,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6995,
      "end": 6995,
      "loc": {
        "start": {
          "line": 148,
          "column": 24
        },
        "end": {
          "line": 148,
          "column": 24
        }
      }
    }
  ]
}